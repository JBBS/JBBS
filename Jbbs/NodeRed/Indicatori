[
    {
        "id": "6a967588.6d65ec",
        "type": "tab",
        "label": "Indicatori"
    },
    {
        "id": "d1757888.70b668",
        "type": "json",
        "z": "6a967588.6d65ec",
        "name": "",
        "pretty": false,
        "x": 270,
        "y": 440,
        "wires": [
            [
                "c3b96d4e.13dfc",
                "6f23ec62.7ece74",
                "f2004598.b069e8"
            ]
        ]
    },
    {
        "id": "b427ebd9.6cfac8",
        "type": "mqtt in",
        "z": "6a967588.6d65ec",
        "name": "mash/status",
        "topic": "mash/status",
        "qos": "0",
        "broker": "92a95ff8.a2c31",
        "x": 110,
        "y": 440,
        "wires": [
            [
                "d1757888.70b668"
            ]
        ]
    },
    {
        "id": "c3b96d4e.13dfc",
        "type": "ui_template",
        "z": "6a967588.6d65ec",
        "group": "e5cde9d9.86dd88",
        "name": "Mash Temp Gauge",
        "order": 1,
        "width": "0",
        "height": "0",
        "format": "<script>\nvar radial4;\n    (function(scope){\n        scope.$watch('msg', function(msg) {\n           if (typeof(msg.payload.desc) != \"undefined\") radial4.setUnitString(msg.payload.desc);\n           if (typeof(msg.payload.tempActual) != \"undefined\") radial4.setValue(msg.payload.tempActual);\n//           if (typeof(msg.payload.max) != \"undefined\") radial4.setMaxValue(msg.payload.max);\n//           if (typeof(msg.payload.tempStart) != \"undefined\") radial4.setMinValue(msg.payload.tempStart);\n           if (typeof(msg.payload.tempTarget) != \"undefined\") radial4.setThreshold(msg.payload.tempTarget);\n           if (typeof(msg.payload.pump) != \"undefined\") {\n\t\t\t\tradial4.blinkUserLed(msg.payload.pump); \n\t\t\t\tradial4.setUserLedOnOff(msg.payload.pump); \n\t\t\t}\n           if (typeof(msg.payload.fire) != \"undefined\") {\n\t\t\t\tradial4.blinkLed(msg.payload.fire); \n\t\t\t\tradial4.setLedOnOff(msg.payload.fire); \n\t\t\t}\n           if (typeof(msg.payload.trend) != \"undefined\")\n            {\n                if (msg.payload.trend==1)     radial4.setTrend(steelseries.TrendState.UP);\n                if (msg.payload.trend==0)     radial4.setTrend(steelseries.TrendState.STEADY);\n                if (msg.payload.trend==-1)    radial4.setTrend(steelseries.TrendState.DOWN);\n                if (msg.payload.trend==-2)    radial4.setTrend(steelseries.TrendState.OFF);\n            }\n        });\n    })(scope);\n\n    var sections = [steelseries.Section(20, 50, 'rgba(0, 0, 220, 0.3)'),\n                        steelseries.Section(50, 70, 'rgba(0, 220, 0, 0.3)'),\n                        steelseries.Section(70, 80, 'rgba(220, 0, 0, 0.3)') ],\n\n            // Define one area\n    areas = [steelseries.Section(70, 80, 'rgba(220, 0, 0, 0.3)')],\n\n    radial4 = new steelseries.Radial('canvasRadial4', {\n            gaugeType: steelseries.GaugeType.TYPE4,\n            size: 292,\n            section: sections,\n            area: areas,\n            titleString: \"Mash\",\n            unitString: \"\",\n            threshold: 0,\n            thresholdRising: false,\n            userLedVisible: true,\n            useOdometer: false,\n            lcdVisible: false,\n            trendVisible: true,\n\t\t\tuserLedColor: steelseries.LedColor.BLUE_LED,\n\t\t\tPointerType: steelseries.PointerType.TYPE11,\n\t\t\tFrameDesign: steelseries.FrameDesign.BLACK_METAL,\n\t\t\tframeVisible: false,\n\t\t\tminValue : 20,\n\t\t\tmaxValue : 80\n        });\n                       \n//    radial4.setFrameDesign(steelseries.FrameDesign.BLACK_METAL);\n    radial4.setValue(0);\n    radial4.setThreshold(0);\n    radial4.blinkUserLed(0);\n//\tradial4.setPointerType(steelseries.PointerType.TYPE11)\n\n\n</script>\n\n<canvas id=\"canvasRadial4\" width=\"401\" height=\"401\"></canvas>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 490,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "9c6c57d8.496918",
        "type": "ui_template",
        "z": "6a967588.6d65ec",
        "group": "e5cde9d9.86dd88",
        "name": "Mash Time Bar",
        "order": 3,
        "width": "6",
        "height": "1",
        "format": "<div layout=\"row\" layout-align=\"space-between center\">\n{{msg.payload.timeStart}}<progress value={{msg.progress}} max=\"100\"></progress>{{msg.payload.timeFinish}}\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "x": 620,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "6f23ec62.7ece74",
        "type": "function",
        "z": "6a967588.6d65ec",
        "name": "",
        "func": "if (msg.payload.timeFinish) {\n    msg.progress = 100 * (Date.now() - msg.payload.timeStart*1000) / (1000 * (msg.payload.timeFinish -msg.payload.timeStart));\n    data = new Date(msg.payload.timeStart * 1000);\n    msg.payload.timeStart = data.getHours() + \":\" + ((data.getMinutes() < 10) ? \"0\" :\"\") + data.getMinutes();\n    data = new Date(msg.payload.timeFinish * 1000);\n    msg.payload.timeFinish = data.getHours() + \":\" + ((data.getMinutes() < 10) ? \"0\" :\"\") + data.getMinutes();\n} else {\n    msg.progress = 0\n    msg.payload.timeStart = \"--:--\";\n    msg.payload.timeFinish = \"--:--\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 440,
        "wires": [
            [
                "9c6c57d8.496918"
            ]
        ]
    },
    {
        "id": "9ceb6de4.6fa4a",
        "type": "ui_template",
        "z": "6a967588.6d65ec",
        "group": "19be7e03.3ba792",
        "name": "Boil Temp Gauge",
        "order": 1,
        "width": "0",
        "height": "0",
        "format": "<script>\nvar radialBoil;\n    (function(scope){\n        scope.$watch('msg', function(msg) {\n           if (typeof(msg.payload.desc) != \"undefined\") radialBoil.setUnitString(msg.payload.desc);\n           if (typeof(msg.payload.tempActual) != \"undefined\") radialBoil.setValue(msg.payload.tempActual);\n           if (typeof(msg.payload.bigFire) != \"undefined\") {\n\t\t\t\tradialBoil.blinkUserLed(msg.payload.bigFire); \n\t\t\t\tradialBoil.setUserLedOnOff(msg.payload.bigFire); \n\t\t\t}\n           if (typeof(msg.payload.smallFire) != \"undefined\") {\n\t\t\t\tradialBoil.blinkLed(msg.payload.smallFire); \n\t\t\t\tradialBoil.setLedOnOff(msg.payload.smallFire); \n\t\t\t}\n           if (typeof(msg.payload.trend) != \"undefined\")\n            {\n                if (msg.payload.trend==1)     radialBoil.setTrend(steelseries.TrendState.UP);\n                if (msg.payload.trend==0)     radialBoil.setTrend(steelseries.TrendState.STEADY);\n                if (msg.payload.trend==-1)    radialBoil.setTrend(steelseries.TrendState.DOWN);\n                if (msg.payload.trend==-2)    radialBoil.setTrend(steelseries.TrendState.OFF);\n            }\n        });\n    })(scope);\n\n    var sections = [steelseries.Section(50, 99, 'rgba(0, 0, 220, 0.3)'),\n                    steelseries.Section(99, 110, 'rgba(220, 0, 0, 0.3)') ],\n\n            // Define one area\n    areas = [steelseries.Section(99, 110, 'rgba(220, 0, 0, 0.3)')],\n\n    radialBoil = new steelseries.Radial('canvasRadialBoil', {\n            gaugeType: steelseries.GaugeType.TYPE4,\n            size: 292,\n            section: sections,\n            area: areas,\n            titleString: \"Boil\",\n            unitString: \"\",\n            thresholdVisible: false,\n            thresholdRising: false,\n            userLedVisible: true,\n            useOdometer: false,\n            lcdVisible: false,\n            trendVisible: true,\n\t\t\tuserLedColor: steelseries.LedColor.RED_LED,\n\t\t\tPointerType: steelseries.PointerType.TYPE11,\n\t\t\tFrameDesign: steelseries.FrameDesign.BLACK_METAL,\n\t\t\tframeVisible: false,\n\t\t\tminValue : 50,\n\t\t\tmaxValue : 110\n        });\n                       \n//    radial4.setFrameDesign(steelseries.FrameDesign.BLACK_METAL);\n    radialBoil.setValue(0);\n//    radialBoil.setThreshold(0);\n    radialBoil.blinkUserLed(0);\n//\tradial4.setPointerType(steelseries.PointerType.TYPE11)\n\n\n</script>\n\n<canvas id=\"canvasRadialBoil\" width=\"401\" height=\"401\"></canvas>\n",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 490,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "bf5bb548.884fb8",
        "type": "mqtt in",
        "z": "6a967588.6d65ec",
        "name": "boil/status",
        "topic": "boil/status",
        "qos": "0",
        "broker": "92a95ff8.a2c31",
        "x": 100,
        "y": 640,
        "wires": [
            [
                "7f8df4b8.faedcc"
            ]
        ]
    },
    {
        "id": "7f8df4b8.faedcc",
        "type": "json",
        "z": "6a967588.6d65ec",
        "name": "",
        "x": 270,
        "y": 640,
        "wires": [
            [
                "9ceb6de4.6fa4a",
                "ffebd67e.7c0418",
                "c98d9af1.3331e8",
                "b3438e86.e62a5"
            ]
        ]
    },
    {
        "id": "ffebd67e.7c0418",
        "type": "function",
        "z": "6a967588.6d65ec",
        "name": "",
        "func": "if (msg.payload.timeFinish) {\n    msg.progress = 100 * (Date.now() - msg.payload.timeStart*1000) / (1000 * (msg.payload.timeFinish -msg.payload.timeStart));\n    data = new Date(msg.payload.timeStart * 1000);\n    msg.payload.timeStart = data.getHours() + \":\" + ((data.getMinutes() < 10) ? \"0\" :\"\") + data.getMinutes();\n    data = new Date(msg.payload.timeFinish * 1000);\n    msg.payload.timeFinish = data.getHours() + \":\" + ((data.getMinutes() < 10) ? \"0\" :\"\") + data.getMinutes();\n} else {\n    msg.progress = 0\n    msg.payload.timeStart = \"--:--\";\n    msg.payload.timeFinish = \"--:--\";\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 640,
        "wires": [
            [
                "d73f20ae.db45a"
            ]
        ]
    },
    {
        "id": "d73f20ae.db45a",
        "type": "ui_template",
        "z": "6a967588.6d65ec",
        "group": "19be7e03.3ba792",
        "name": "Boil Time Bar",
        "order": 5,
        "width": "6",
        "height": "1",
        "format": "<div layout=\"row\" layout-align=\"space-between center\">\n{{msg.payload.timeStart}}<progress value={{msg.progress}} max=\"100\"></progress>{{msg.payload.timeFinish}}\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": false,
        "x": 610,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "d9087b26.d9c458",
        "type": "ui_switch",
        "z": "6a967588.6d65ec",
        "name": "boilReady",
        "label": "Ready",
        "group": "19be7e03.3ba792",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "x": 740,
        "y": 700,
        "wires": [
            [
                "ea0daa0e.a4e408"
            ]
        ]
    },
    {
        "id": "ea0daa0e.a4e408",
        "type": "mqtt out",
        "z": "6a967588.6d65ec",
        "name": "dashboard/boil/ready",
        "topic": "dashboard/boil/ready",
        "qos": "2",
        "retain": "",
        "broker": "92a95ff8.a2c31",
        "x": 960,
        "y": 700,
        "wires": []
    },
    {
        "id": "88714777.60ae78",
        "type": "mqtt out",
        "z": "6a967588.6d65ec",
        "name": "dashboard/boil/setboil",
        "topic": "dashboard/boil/setboil",
        "qos": "2",
        "retain": "",
        "broker": "92a95ff8.a2c31",
        "x": 960,
        "y": 820,
        "wires": []
    },
    {
        "id": "3982dab8.c28ac6",
        "type": "ui_numeric",
        "z": "6a967588.6d65ec",
        "name": "Boil Temp",
        "label": "Boil Temp",
        "group": "19be7e03.3ba792",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "topic": "",
        "format": "{{value}}",
        "min": "90",
        "max": "110",
        "step": 1,
        "x": 740,
        "y": 820,
        "wires": [
            [
                "88714777.60ae78"
            ]
        ]
    },
    {
        "id": "c98d9af1.3331e8",
        "type": "function",
        "z": "6a967588.6d65ec",
        "name": "",
        "func": "\nreturn msg.payload.boilTemp;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 820,
        "wires": [
            [
                "3982dab8.c28ac6"
            ]
        ]
    },
    {
        "id": "b3438e86.e62a5",
        "type": "function",
        "z": "6a967588.6d65ec",
        "name": "",
        "func": "msg.payload=msg.payload.status;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 700,
        "wires": [
            [
                "c252d3af.72f75"
            ]
        ]
    },
    {
        "id": "1f15511b.063aef",
        "type": "ui_switch",
        "z": "6a967588.6d65ec",
        "name": "mashReady",
        "label": "Ready",
        "group": "e5cde9d9.86dd88",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "x": 750,
        "y": 500,
        "wires": [
            [
                "3d68015d.5dcd1e"
            ]
        ]
    },
    {
        "id": "f2004598.b069e8",
        "type": "function",
        "z": "6a967588.6d65ec",
        "name": "",
        "func": "msg.payload=msg.payload.status;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 500,
        "wires": [
            [
                "23905656.dabdda"
            ]
        ]
    },
    {
        "id": "3d68015d.5dcd1e",
        "type": "mqtt out",
        "z": "6a967588.6d65ec",
        "name": "dashboard/mash/ready",
        "topic": "dashboard/mash/ready",
        "qos": "2",
        "retain": "",
        "broker": "92a95ff8.a2c31",
        "x": 960,
        "y": 500,
        "wires": []
    },
    {
        "id": "23905656.dabdda",
        "type": "rbe",
        "z": "6a967588.6d65ec",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "x": 590,
        "y": 500,
        "wires": [
            [
                "1f15511b.063aef"
            ]
        ]
    },
    {
        "id": "c252d3af.72f75",
        "type": "rbe",
        "z": "6a967588.6d65ec",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "x": 590,
        "y": 700,
        "wires": [
            [
                "d9087b26.d9c458"
            ]
        ]
    },
    {
        "id": "90d3301b.237d",
        "type": "ui_template",
        "z": "6a967588.6d65ec",
        "group": "2c58f6ef.d821da",
        "name": "LoadScript",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<script src=\"myjs/myGauge-min.js\"></script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "templateScope": "global",
        "x": 110,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "2b9cbe80.df4322",
        "type": "ui_template",
        "z": "6a967588.6d65ec",
        "group": "34cc37a4.9948a8",
        "name": "Sparge Temp Gauge",
        "order": 2,
        "width": "0",
        "height": "0",
        "format": "<script>\nvar radialSparge;\n    (function(scope){\n        scope.$watch('msg', function(msg) {\n           if (typeof(msg.payload.desc) != \"undefined\") radialSparge.setUnitString(msg.payload.desc);\n           if (typeof(msg.payload.tempActual) != \"undefined\") radialSparge.setValue(msg.payload.tempActual);\n           if (typeof(msg.payload.tempTarget) != \"undefined\") radialSparge.setThreshold(msg.payload.tempTarget);\n           if (typeof(msg.payload.boilValve) != \"undefined\") {\n//\t\t\t\tradialSparge.blinkUserLed(msg.payload.boilValve); \n\t\t\t\tradialSparge.setUserLedOnOff(msg.payload.boilValve); \n\t\t\t}\n           if (typeof(msg.payload.fire) != \"undefined\") {\n\t\t\t\tradialSparge.blinkLed(msg.payload.fire); \n\t\t\t\tradialSparge.setLedOnOff(msg.payload.fire); \n\t\t\t}\n           if (typeof(msg.payload.trend) != \"undefined\")\n            {\n                if (msg.payload.trend==1)     radialSparge.setTrend(steelseries.TrendState.UP);\n                if (msg.payload.trend==0)     radialSparge.setTrend(steelseries.TrendState.STEADY);\n                if (msg.payload.trend==-1)    radialSparge.setTrend(steelseries.TrendState.DOWN);\n                if (msg.payload.trend==-2)    radialSparge.setTrend(steelseries.TrendState.OFF);\n            }\n        });\n    })(scope);\n\n    var sections = [steelseries.Section(20, 68, 'rgba(0, 0, 220, 0.3)'),\n                        steelseries.Section(70, 80, 'rgba(0, 220, 0, 0.3)'),\n                        steelseries.Section(80, 90, 'rgba(220, 0, 0, 0.3)') ],\n\n            // Define one area\n    areas = [steelseries.Section(80, 90, 'rgba(220, 0, 0, 0.3)')],\n\n    radialSparge = new steelseries.Radial('canvasRadialSparge', {\n            gaugeType: steelseries.GaugeType.TYPE4,\n            size: 292,\n            section: sections,\n            area: areas,\n            titleString: \"Sparge\",\n            unitString: \"\",\n            threshold: 0,\n            thresholdRising: false,\n            userLedVisible: true,\n            useOdometer: false,\n            lcdVisible: false,\n            trendVisible: true,\n//\t\t\tuserLedColor: steelseries.LedColor.BLUE_LED,\n\t\t\tPointerType: steelseries.PointerType.TYPE11,\n\t\t\tFrameDesign: steelseries.FrameDesign.BLACK_METAL,\n\t\t\tframeVisible: false,\n\t\t\tminValue : 20,\n\t\t\tmaxValue : 90\n        });\n                       \n//    radial4.setFrameDesign(steelseries.FrameDesign.BLACK_METAL);\n    radialSparge.setValue(0);\n    radialSparge.setThreshold(0);\n    radialSparge.blinkUserLed(0);\n//\tradial4.setPointerType(steelseries.PointerType.TYPE11)\n\n\n</script>\n\n<canvas id=\"canvasRadialSparge\" width=\"401\" height=\"401\"></canvas>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "templateScope": "local",
        "x": 500,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "e97e1231.04be5",
        "type": "mqtt in",
        "z": "6a967588.6d65ec",
        "name": "sparge/status",
        "topic": "sparge/status",
        "qos": "0",
        "broker": "92a95ff8.a2c31",
        "x": 110,
        "y": 220,
        "wires": [
            [
                "8793008b.5c07e"
            ]
        ]
    },
    {
        "id": "8793008b.5c07e",
        "type": "json",
        "z": "6a967588.6d65ec",
        "name": "",
        "pretty": false,
        "x": 270,
        "y": 220,
        "wires": [
            [
                "2b9cbe80.df4322",
                "a577ba91.203988"
            ]
        ]
    },
    {
        "id": "21443eb7.f2ead2",
        "type": "ui_switch",
        "z": "6a967588.6d65ec",
        "name": "spargeReady",
        "label": "Ready",
        "group": "34cc37a4.9948a8",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "style": "",
        "onvalue": "1",
        "onvalueType": "num",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "num",
        "officon": "",
        "offcolor": "",
        "x": 750,
        "y": 260,
        "wires": [
            [
                "365268c3.152648"
            ]
        ]
    },
    {
        "id": "a577ba91.203988",
        "type": "function",
        "z": "6a967588.6d65ec",
        "name": "",
        "func": "msg.payload=msg.payload.status;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 260,
        "wires": [
            [
                "36582a07.adfb96"
            ]
        ]
    },
    {
        "id": "365268c3.152648",
        "type": "mqtt out",
        "z": "6a967588.6d65ec",
        "name": "dashboard/sparge/ready",
        "topic": "dashboard/sparge/ready",
        "qos": "2",
        "retain": "",
        "broker": "92a95ff8.a2c31",
        "x": 970,
        "y": 260,
        "wires": []
    },
    {
        "id": "36582a07.adfb96",
        "type": "rbe",
        "z": "6a967588.6d65ec",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "x": 590,
        "y": 260,
        "wires": [
            [
                "21443eb7.f2ead2"
            ]
        ]
    },
    {
        "id": "955262dc.2486c",
        "type": "comment",
        "z": "6a967588.6d65ec",
        "name": "Temporaneo",
        "info": "Ramo temporaneo fino a definizione T° di bollitura",
        "x": 270,
        "y": 760,
        "wires": []
    },
    {
        "id": "92a95ff8.a2c31",
        "type": "mqtt-broker",
        "z": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "Jbbs-NodeRed",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "e5cde9d9.86dd88",
        "type": "ui_group",
        "z": "",
        "name": "Mash",
        "tab": "8b7e3761.002d78",
        "order": 3,
        "disp": false,
        "width": "6"
    },
    {
        "id": "19be7e03.3ba792",
        "type": "ui_group",
        "z": "",
        "name": "Boil",
        "tab": "8b7e3761.002d78",
        "order": 4,
        "disp": false,
        "width": "6"
    },
    {
        "id": "2c58f6ef.d821da",
        "type": "ui_group",
        "z": "",
        "name": "Elenco Ricette",
        "tab": "c973b9a1.804828",
        "disp": true,
        "width": "6"
    },
    {
        "id": "34cc37a4.9948a8",
        "type": "ui_group",
        "z": "",
        "name": "Sparge",
        "tab": "8b7e3761.002d78",
        "order": 2,
        "disp": false,
        "width": "6"
    },
    {
        "id": "8b7e3761.002d78",
        "type": "ui_tab",
        "z": "",
        "name": "Jbbs",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": true
    },
    {
        "id": "c973b9a1.804828",
        "type": "ui_tab",
        "z": "",
        "name": "Recipe",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": true
    }
]